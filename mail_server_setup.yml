---
- name: Ensure that we have mail server packages installed
  apt: "name={{ item }} state=present"
  loop:
    - postfix
    - postfix-pcre
    - dovecot-imapd
    - dovecot-pop3d
    - dovecot-lmtpd
    - dovecot-sieve
    - opendkim
    - opendkim-tools
    - spamass-milter

- name: Ensure that mail system servers are running and start at boot
  service: "name={{ item }} state=started enabled=yes"
  loop:
    - postfix
    - dovecot
    - spamassassin
    - spamass-milter

- name: Combine all mail domains
  set_fact:
    all_mail_domains: "{{ mail_domains.keys() | list + [server_hostname] }}"

- name: Ensure that mailname is set to the hostname
  template:
    src: templates/etc_mailname.j2
    dest: /etc/mailname

- name: Configure postfix
  include_tasks: configure_postfix.yml
  tags:
    - postfix

- block:
  - name: Configure dovecot
    include_tasks: configure_dovecot.yml
  tags: dovecot

- name: Configure spamassasin
  include_tasks: configure_spamassassin.yml
  tags:
    - spamassassin

- name: Configure DKIM
  include_tasks: configure_dkim.yml
  tags:
    - dkim

- name: Create admin user for administrative emails
  user:
    name: admin
    create_home: yes
    password: "{{ admin_mail_password | password_hash('blowfish', ('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890' | shuffle(seed=server_hostname) | join)[:21] + ('Oeu' | shuffle(seed=server_hostname) | join)[1], rounds=11) }}"

- name: Redirect mail meant for root to admin user
  lineinfile:
    dest: "/etc/aliases"
    regexp: "^root:"
    line: "root: admin"
    state: present
  notify: update aliases db

- name: Redirect mail sent to local postfix user to admin user
  lineinfile:
    dest: "/etc/aliases"
    regexp: "^postmaster:"
    line: "postmaster: admin"
    state: present
  notify: update aliases db

- name: Redirect mail sent to postfix for all domains to local postfix user
  lineinfile:
    dest: "/etc/postfix/virtual"
    create: true
    regexp: '^postmaster@{{ item }}\s'
    line: "postmaster@{{ item }} postmaster"
    state: present
  notify: update virtual alias maps db
  with_items: "{{ all_mail_domains }}"

- name: Generate TXT records for DKIM, DMARC, SPF
  include_tasks: generate_txt_records.yml
  loop: "{{ all_mail_domains }}"
  loop_control:
    loop_var: domain
